//localStorage.setItem('usuariosBd', JSON.stringify(userExist));


/*   //ESTADO USUARIO EXISTENTE
  const [userExist, setUserExist] = useState(usuariosBd)

  const [usuario, setUsuario] = useState({})

   //LOCAL STORAGE
   const usuariosLS = [...userExist, usuario] //SI NO TENGO NADA EN EL LOCAL STORAGE ME CREA UN ARRAY VACIO

  const [usuarios, setUsuarios] = useState(usuariosLS) */


import { useEffect, useState } from 'react'
import UsuariosResultado from './usuariosResultado';
import '../Admin/styles/productos.css'

function Usuarios() {

  //USUARIOS EXISTENTES
  const usuariosBd = [{
    id:1,
    userName:'Pia Lopez',
    userEmail:'pialopez@gmail.com',
    userPassword:'123456',
    activeUser:true,
    roleUser:'Admin',
    address:'Santiago 1064'
  }]

  
  //ESTADO USUARIO EXISTENTE
  const [userExist, setUserExist] = useState(usuariosBd)

  //LOCAL STORAGE
  const usuariosLS = JSON.parse(localStorage.getItem('usuariosRC')) ?? []; //SI NO TENGO NADA EN EL LOCAL STORAGE ME CREA UN ARRAY VACIO



  const [usuarios, setUsuarios] = useState(usuariosLS)
  const [usuario, setUsuario] = useState({})


  // VALORES DEL FORM 
  const [userName, setUserName] = useState('');
  const [userEmail, setuserEmail] = useState(''); //email antes era descripcion
  const [userPassword, setUserPassword] = useState('');//pasword antes era imagen
  const [activeUser, setActiveUser] = useState(Boolean);
  const [roleUser, setRoleUser] = useState('');//precio antes era roleuser
  const [address, setAddress] = useState('');
  //LOCAL STORAGE
  useEffect(() => {
    localStorage.setItem('usuariosRC', JSON.stringify(usuarios))
  }, [usuarios]);

  //PARA QUE APAREZCA LOS PRODUCTOS EN EL INPUT CUANDO PONGA EDITAR
  useEffect(() => {
    if (Object.keys(usuario.length > 0)) {
      setUserName(usuario.userName)
      setuserEmail(usuario.userEmail)
      setUserPassword(usuario.userPassword)
      setRoleUser(usuario.roleUser)
      setActiveUser(usuario.activeUser)
      setAddress(usuario.address)
    } else {
      console.log('No hay nada en usuarios');
    }
  }, [usuario])

  //GENERAMOS EL ID DINAMICO
  const generoIdDinamico = () => {
    const ran = Math.random()
    const fecha = Date.now()
    return ran + fecha
  };

  const handleSubmit = (e) => {
    e.preventDefault()

    if ([userName, userEmail, userPassword, roleUser, activeUser, address].includes('')) {
      console.log('El campo debe estar completo');
      return;
    }

    const objetoUsuarios = {
      userName,
      userEmail,
      userPassword,
      roleUser,
      activeUser,
      address
    }

    if (usuario.id) {
      //EDITAMOS LA TAREA 
      objetoUsuarios.id = usuario.id

      const usuariosActualizados = usuarios.map((usuariosState) => {
        return usuariosState.id === usuario.id ? objetoUsuarios : usuariosState
      })

      setUsuarios(usuariosActualizados)
      setUsuario({})

    } else {
      //CREAMOS LA TAREA NUEVA
      console.log('usuario nueva');
      objetoUsuarios.id = generoIdDinamico()
      setUsuarios([...usuarios, objetoUsuarios])
    }

    //PARA NO TENER QUE BORRAR EL INPUT A MANO SE REINICIA SOLO
    setUserName('')
    setuserEmail('')
    setRoleUser('')
    setActiveUser('')
    setUserPassword('')
    setAddress('')
  }

  //PARA ELIMINAR LA TAREA
  const eliminandoUsuario = (id) => {
    const usuariosActualizados = usuarios.filter((usuariosState) => usuariosState.id !== id)
    setUsuarios(usuariosActualizados)
  }

  return (
    <>
      <main>
        <form className="producto-contenedor d-flex flex-column align-items-center" onSubmit={handleSubmit}>
          <div className='mt-3 d-flex justify-content-center align-items-center'>
            <label className=' text-start producto-texto fs-6' htmlFor="nombre">Nombre del Usuario</label>
            <input
              className='input-productos w-75 p-1 input-nombre rounded border border-black border-opacity-50'
              type="text"
              name="nombre"
              id="nombre"
              placeholder="Nombre"
              value={userName}
              onChange={(e) => setUserName(e.target.value)}
            />
            <label className='ps-2 text-start producto-texto fs-6' htmlFor="nombre">Email del Usuario</label>
            <input
              className='input-productos w-75 p-1  input-nombre rounded border border-black border-opacity-50'
              type="text"
              name="email"
              id="email"
              placeholder="Email"
              value={userEmail}
              onChange={(e) => setuserEmail(e.target.value)}
            />
          </div>
          <div className='mt-3 d-flex justify-content-center align-items-center'>
            <label className='text-start producto-texto fs-6' htmlFor="nombre">Contraseña del Usuario</label>
            <input
              className=' input-productos w-75 p-1  input-nombre rounded border border-black border-opacity-50'
              type="text"
              name="password"
              id="password"
              placeholder="Contrañesa"
              value={userPassword}
              onChange={(e) => setUserPassword(e.target.value)}
            />
            <label className='ps-2 text-start producto-texto fs-6' htmlFor="descripcion">Usuario Activo</label>
            <input
              className='input-productos w-75 p-1 input-nombre rounded border border-black border-opacity-50'
              name="activo"
              id="activo"
              placeholder="Usuario Activo"
              value={activeUser}
              onChange={(e) => setActiveUser(e.target.value)}
            />
          </div>
          <div className='mt-3 d-flex justify-content-start align-items-center'>
            <label className='text-start producto-texto fs-6' htmlFor="descripcion">Direccion del Usuario</label>
            <input
              className='input-productos w-75 p-1 input-nombre rounded border border-black border-opacity-50'
              name="address"
              id="address"
              placeholder="Direccion del Usuario"
              value={address}
              onChange={(e) => setAddress(e.target.value)}
            />
            <label className='ps-2 text-start producto-texto fs-6' htmlFor="descripcion">Rol del Usuario</label>
            <input
              className='input-productos w-75 p-1 input-nombre rounded border border-black border-opacity-50'
              name="role"
              id="role"
              placeholder="Rol del Usuario"
              value={roleUser}
              onChange={(e) => setRoleUser(e.target.value)}
            />
          </div>

          <input
            className='mt-3 mb-2 btn btn-dark'
            type="submit"
            value={usuario.id ? 'Editar Usuario' : 'Crear Usuario'}
          />
        </form>

        <div className="resultado">
          <UsuariosResultado
            usuarios={usuarios}
            setUsuario={setUsuario}
            eliminandoUsuario={eliminandoUsuario}
            setUserExist={setUserExist}
            userExist={userExist}
          />
        </div>
      </main>
    </>
  )
}

export default Usuarios